1. Mandatory: Elaborate what your internship or academic projects were.
  a. What did the system do?
  b. What other systems have you seen in the wild like that?
  c. How do you approach the development problem?
  d. What were the interesting aspects where you copied code from Stack Overflow?
  e. What did you learn from some very specific copy-paste? Mention explicitly some
    of them.

Answer:
In the scope of my internship, the project I worked on was named AUTO_UI. Here, we created an automation framework from scratch using Selenium, Cucumber, TestNG, Java, JSON, and Jenkins. Because of this framework, we were enabled to automate all tests at any level of database, API, and UI. The scope of this project involved five members working together in a team.

a. What did the system do?
The automation framework that we designed was modular so that any component of different testing pieces could seamlessly integrate it. It was implemented in a way so that the entire process of database interactions, API validations, and user interface tests were automated completely without hassle. The entire process of the testing system would be able to ensure both robust and comprehensive automation testing through the combination of appropriate technologies.

b. What have you seen like that of other systems?
I have encountered other such frameworks as well, for example, the industry standard solution TestNG using Maven or Jenkins for CI/CD pipelines and also frameworks like Selenium WebDriver using Cucumber to attain test automation. Another set of major systems is the one that Robot Framework and Appium, and their implementation trends appear to take this shape to deliver cross-functional automation.

c. How do you solve the development problem?
We approached the development problem following the Software Development Life Cycle (SDLC) and good coding practices, modularization, and reusability. Requirements were defined, architecture was designed, and the quality of the code was ensured with peer reviews and testing. In one case, I was assigned a task to automate Single Sign-On authentication, where I had to figure out a solution for handling the login popup as it cannot be interacted with directly by Selenium 3.

d. What was interesting about the features where you copied code from Stack Overflow?
I was working on the automation of SSO login, and I came across one limitation where Selenium 3 would not support non-controllable pops that would appear outside the control of a test environment. After solving this, I found some workaround encoding on Stack Overflow. Tweakable to our exact requirement with some code, the bypass was possible by passing the credentials directly through the URL over the SSO login screen.

e. What did you learn from some very, very specific copy-paste?
From that particular example, I learned about the encoding of a URL and how it is very easy to send credentials directly in URLs to bypass login mechanisms. In a way, it gave an insight into how data gets encoded and decoded in the URL and what are the implications for security, leading to learning how to manipulate requests to fit in test automation needs.
